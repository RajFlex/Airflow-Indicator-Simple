/*
 * This code shows Text on the LHS and a tick on the RHS of the PCD 8544 screen 
 * Future iterations will show digital pin output on the LHS of the screen and tick or a cross on the RHS accordingly
 */
#include "U8glib.h"
//#include "dht.h"

//#define dht_apin A1
//#define backlight_pin 11

//dht DHT;

U8GLIB_PCD8544 u8g(8, 4, 7, 5, 6);  // CLK=8, DIN=4, CE=7, DC=5, RST=6

const uint8_t brainy_bitmap[] PROGMEM =  {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00,
0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80,
0x00, 0x00, 0x00, 0x00, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x01,
0xFF, 0xC0, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x03, 0xFF, 0x80, 0x00, 0x00,
0x00, 0x03, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x07, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0x00,
0x00, 0x00, 0x00, 0x0F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x1F,
0xFC, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xF8, 0x00, 0x00, 0x00,
0x00, 0x7F, 0xF8, 0x00, 0x00, 0x0C, 0x00, 0x7F, 0xF0, 0x00, 0x00, 0x1E, 0x00, 0xFF, 0xE0, 0x00,
0x00, 0x3F, 0x00, 0xFF, 0xE0, 0x00, 0x00, 0x3F, 0x81, 0xFF, 0xC0, 0x00, 0x00, 0x7F, 0xC1, 0xFF,
0xC0, 0x00, 0x00, 0x7F, 0xE3, 0xFF, 0x80, 0x00, 0x00, 0xFF, 0xF3, 0xFF, 0x80, 0x00, 0x00, 0xFF,
0xFF, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFE, 0x00, 0x00,
0x00, 0x7F, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xF8,
0x00, 0x00, 0x00, 0x0F, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x03,
0xFF, 0xF0, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xE0, 0x00, 0x00,
0x00, 0x00, 0x7F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80,
0x00, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x02, 0x01, 0x04, 0x02, 0x02, 0x03, 0x00, 0x03,
0x00, 0x00, 
};

void draw(void) {
  u8g.drawBitmapP( 37, 0, 6, 50, brainy_bitmap);  // put bitmap ( 37, 0, 6, 50, brainy_bitmap)
  u8g.setFont(u8g_font_profont11);  // select font
  u8g.drawStr(0, 15, "Pressure:");  // put string of display at position X, Y
  u8g.drawStr(0, 35, "2 ");
  u8g.setPrintPos(15, 15);  // set position
//  u8g.print(DHT.temperature, 0);  // display temperature from DHT11  ----- Try displaying ever-changing digital pin value here
//  u8g.drawStr(30, 15, "c ");
  u8g.setPrintPos(15, 35);
//  u8g.print(DHT.humidity, 0);  // display humidity from DHT11
  u8g.drawStr(15, 35, "kPa");
}

void setup(void) {
//  analogWrite(backlight_pin, 50);  /* Set the Backlight intensity */
}

void loop(void) {
//  DHT.read11(dht_apin);  // Read apin on DHT11

  u8g.firstPage();  
  do {
    draw();
  } while( u8g.nextPage() );
  
  delay(5000);  // Delay of 5sec before accessing DHT11 (min - 2sec)
}
